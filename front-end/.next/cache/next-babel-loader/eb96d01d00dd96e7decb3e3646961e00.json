{"ast":null,"code":"export function initializeMap(mapboxgl, map) {\n  map.on(\"click\", \"data\", function (e) {\n    var features = map.queryRenderedFeatures(e.point, {\n      layers: [\"data\"]\n    });\n    var clusterId = features[0].properties.cluster_id;\n    map.getSource(\"dcmusic.live\").getClusterExpansionZoom(clusterId, function (err, zoom) {\n      if (err) return;\n      map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom\n      });\n    });\n  });\n  map.on(\"click\", \"unclustered-point\", function (e) {\n    var coordinates = e.features[0].geometry.coordinates.slice();\n    var mag = e.features[0].properties.mag;\n    var tsunami;\n\n    if (e.features[0].properties.tsunami === 1) {\n      tsunami = \"yes\";\n    } else {\n      tsunami = \"no\";\n    }\n\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n\n    new mapboxgl.Popup().setLngLat(coordinates) //.setHTML(\"magnitude: \" + mag + \"<br>Was there a tsunami?: \" + tsunami)\n    .setHTML(\"This is a spot\").addTo(map);\n  });\n  map.addControl(new mapboxgl.GeolocateControl({\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true\n  }));\n  map.on(\"mouseenter\", \"data\", function () {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  map.on(\"mouseleave\", \"data\", function () {\n    map.getCanvas().style.cursor = \"\";\n  });\n}","map":{"version":3,"sources":["/Users/olari/github-repos/nextjs-map/front-end/map/initializeMap.js"],"names":["initializeMap","mapboxgl","map","on","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","geometry","coordinates","slice","mag","tsunami","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","getCanvas","style","cursor"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,GAAjC,EAAsC;AAC3CA,EAAAA,GAAG,CAACC,EAAJ,CAAO,OAAP,EAAgB,MAAhB,EAAwB,UAAUC,CAAV,EAAa;AACnC,QAAIC,QAAQ,GAAGH,GAAG,CAACI,qBAAJ,CAA0BF,CAAC,CAACG,KAA5B,EAAmC;AAChDC,MAAAA,MAAM,EAAE,CAAC,MAAD;AADwC,KAAnC,CAAf;AAGA,QAAIC,SAAS,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,UAAZ,CAAuBC,UAAvC;AACAT,IAAAA,GAAG,CACAU,SADH,CACa,cADb,EAEGC,uBAFH,CAE2BJ,SAF3B,EAEsC,UAAUK,GAAV,EAAeC,IAAf,EAAqB;AACvD,UAAID,GAAJ,EAAS;AACTZ,MAAAA,GAAG,CAACc,MAAJ,CAAW;AACTC,QAAAA,MAAM,EAAEZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,QAAZ,CAAqBC,WADpB;AAETJ,QAAAA,IAAI,EAAEA;AAFG,OAAX;AAID,KARH;AASD,GAdD;AAgBAb,EAAAA,GAAG,CAACC,EAAJ,CAAO,OAAP,EAAgB,mBAAhB,EAAqC,UAAUC,CAAV,EAAa;AAChD,QAAIe,WAAW,GAAGf,CAAC,CAACC,QAAF,CAAW,CAAX,EAAca,QAAd,CAAuBC,WAAvB,CAAmCC,KAAnC,EAAlB;AACA,QAAIC,GAAG,GAAGjB,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcK,UAAd,CAAyBW,GAAnC;AACA,QAAIC,OAAJ;;AACA,QAAIlB,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcK,UAAd,CAAyBY,OAAzB,KAAqC,CAAzC,EAA4C;AAC1CA,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,GAAG,IAAV;AACD;;AACD,WAAOC,IAAI,CAACC,GAAL,CAASpB,CAAC,CAACqB,MAAF,CAASC,GAAT,GAAeP,WAAW,CAAC,CAAD,CAAnC,IAA0C,GAAjD,EAAsD;AACpDA,MAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBf,CAAC,CAACqB,MAAF,CAASC,GAAT,GAAeP,WAAW,CAAC,CAAD,CAA1B,GAAgC,GAAhC,GAAsC,CAAC,GAAzD;AACD;;AACD,QAAIlB,QAAQ,CAAC0B,KAAb,GACGC,SADH,CACaT,WADb,EAEE;AAFF,KAGGU,OAHH,CAGW,gBAHX,EAIGC,KAJH,CAIS5B,GAJT;AAKD,GAjBD;AAkBAA,EAAAA,GAAG,CAAC6B,UAAJ,CACE,IAAI9B,QAAQ,CAAC+B,gBAAb,CAA8B;AAC5BC,IAAAA,eAAe,EAAE;AACfC,MAAAA,kBAAkB,EAAE;AADL,KADW;AAI5BC,IAAAA,iBAAiB,EAAE;AAJS,GAA9B,CADF;AASAjC,EAAAA,GAAG,CAACC,EAAJ,CAAO,YAAP,EAAqB,MAArB,EAA6B,YAAY;AACvCD,IAAAA,GAAG,CAACkC,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AACD,GAFD;AAGApC,EAAAA,GAAG,CAACC,EAAJ,CAAO,YAAP,EAAqB,MAArB,EAA6B,YAAY;AACvCD,IAAAA,GAAG,CAACkC,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACD,GAFD;AAGD","sourcesContent":["export function initializeMap(mapboxgl, map) {\n  map.on(\"click\", \"data\", function (e) {\n    var features = map.queryRenderedFeatures(e.point, {\n      layers: [\"data\"],\n    });\n    var clusterId = features[0].properties.cluster_id;\n    map\n      .getSource(\"dcmusic.live\")\n      .getClusterExpansionZoom(clusterId, function (err, zoom) {\n        if (err) return;\n        map.easeTo({\n          center: features[0].geometry.coordinates,\n          zoom: zoom,\n        });\n      });\n  });\n\n  map.on(\"click\", \"unclustered-point\", function (e) {\n    var coordinates = e.features[0].geometry.coordinates.slice();\n    var mag = e.features[0].properties.mag;\n    var tsunami;\n    if (e.features[0].properties.tsunami === 1) {\n      tsunami = \"yes\";\n    } else {\n      tsunami = \"no\";\n    }\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n    new mapboxgl.Popup()\n      .setLngLat(coordinates)\n      //.setHTML(\"magnitude: \" + mag + \"<br>Was there a tsunami?: \" + tsunami)\n      .setHTML(\"This is a spot\")\n      .addTo(map);\n  });\n  map.addControl(\n    new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true,\n      },\n      trackUserLocation: true,\n    })\n  );\n\n  map.on(\"mouseenter\", \"data\", function () {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  map.on(\"mouseleave\", \"data\", function () {\n    map.getCanvas().style.cursor = \"\";\n  });\n}\n"]},"metadata":{},"sourceType":"module"}